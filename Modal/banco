CREATE DATABASE SISTEMA_LOJA;

USE SISTEMA_LOJA;

CREATE TABLE ESTOQUE (
	ID_PRODUTO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	DATA DATE NOT NULL,
	NOME_PRODUTO VARCHAR(100) NOT NULL,
	PRECO_CUSTO FLOAT(10,2) NOT NULL,
	PRECO_PRODUTO FLOAT(10,2) NOT NULL, 
	QUANTIDADE INT NOT NULL, 
	FORMA_PAGAMENTO VARCHAR(100)
);


CREATE TABLE PRODUTOS_NOTA_FISCAL(
	ID_NOTA_FISCAL INT,	
	DATA_EMISSAO DATE,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	FORNECEDOR VARCHAR(30) NOT NULL,
	PRECO_CUSTO FLOAT(10,2) NOT NULL,	
	QUANTIDADE INT NOT NULL,
	TOTAL FLOAT(10,2) NOT NULL
);

CREATE TABLE USUARIO2 (
	ID_USUARIO INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	NOME_COMPLETO VARCHAR(100),
	USUARIO VARCHAR(100),
	SENHA VARCHAR(32),
	CARGO ENUM('Administrador','Gerente','Funcionario'),
	DATA_CADASTRO DATE
);

CREATE TABLE NOTAS_FISCAIS (
	ID_NOTA_FICAL INT PRIMARY KEY NOT NULL,
	NUMERO_NOTA INT NOT NULL
	
);

CREATE TABLE VENDAS_PRODUTOS (
	ID_VENDA INT PRIMARY KEY NOT NULL,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	DATA_VENDA DATE NOT NULL,
	QUANTIDADE INT NOT NULL,
	PRECO_VENDA DECIMAL(10,2),
	FORMA_PAGAMENTO ENUM('DINHEIRO','CREDITO','DEBITO')
);

CREATE TABLE IF NOT EXISTS `mydb`.`FORNECEDOR` (
	`ID_FORNECEDOR` INT NOT NULL AUTO_INCREMENT,
	`NOME_FORNECEDOR` VARCHAR(45) NOT NULL,
	`DATA_CADASTRO` DATE NOT NULL,
	`ENDERECO_FORNECEDOR` VARCHAR(100) NOT NULL,
	`CONTATO_FORNECEDOR` VARCHAR(50) NOT NULL,
)

INSERT INTO PRODUTOS_NOTA_FISCAL VALUES (NULL,NOW(), 'NOME_TESTE','FORNECEDOR_TESTE',15.00, 4, 60.00,21);



SELECT ROUND(SUM((PRECO_PRODUTO - PRECO_CUSTO) * 10 / 100),2) AS 'RETIRADA' FROM ESTOQUE;


21 | 2019-10-13 | TESTANDO PONTO       |      150.90 |        250.90 |          1 | Dinheiro



SELECT * FROM ESTOQUE,PRODUTOS_NOTA_FISCAL
WHERE ID_PRODUTO = ID_ESTRANGEIRA_PRODUTO;

INNER JOIN ENDERECO
ON IDCLIENTE = ID_CLIENTE
WHERE BAIRRO = 'CENTRO';

SELECT * FROM PRODUTOS_NOTA_FISCAL WHERE NOME_PRODUTO LIKE '%d%' OR ID_NOTA_FISCAL LIKE '%1';




INSERT INTO PRODUTOS_NOTA_FISCAL VALUES (2, NOW(),'TESTE_INSERT','PAGE_TESTE', 10, 2, 21);



// dinheiro

SELECT COUNT(FORMA_PAGAMENTO) AS 'DINHEIRO' FROM ESTOQUE WHERE FORMA_PAGAMENTO = 'dinheiro' AND DATA BETWEEN '2020-01-01' AND '2020-02-13' 
UNION ALL
SELECT COUNT(FORMA_PAGAMENTO) AS 'CARTAO' FROM ESTOQUE WHERE FORMA_PAGAMENTO = 'Cartão de Crédito' AND DATA BETWEEN '2020-01-01' AND '2020-02-13';


SELECT COUNT(ID_PRODUTO) AS 'QUANTIDADE' FROM ESTOQUE WHERE DATA = '2020-01-25';

SELECT SUM(PRECO_PRODUTO) AS 'JANEIRO' FROM ESTOQUE WHERE MONTH(DATA) = '01'
UNION
SELECT SUM(PRECO_PRODUTO) AS 'FEVEREIRO' FROM ESTOQUE WHERE MONTH(DATA) = '02';

SELECT DISTINCT(QUANTIDADE) FROM ESTOQUE;

SELECT DISTINCT(SUM(QUANTIDADE)) FROM ESTOQUE;

SELECT SUM(QUANTIDADE) FROM ESTOQUE;



SELECT DISTINCT(COUNT(FORMA_PAGAMENTO)) AS 'DINHEIRO' FROM ESTOQUE WHERE FORMA_PAGAMENTO = 'dinheiro' AND DATA BETWEEN '2020-01-01' AND '2020-02-13';

DELIMITER $

CREATE PROCEDURE GRAFICO()
	
	BEGIN
	
	SELECT DISTINCT(COUNT(FORMA_PAGAMENTO)) AS 'DINHEIRO' FROM ESTOQUE WHERE FORMA_PAGAMENTO = 'dinheiro' AND DATA BETWEEN '2020-01-01' AND '2020-02-13'
	UNION
	SELECT DISTINCT(COUNT(FORMA_PAGAMENTO)) AS 'CARTÃO DE CREDITO' FROM ESTOQUE WHERE FORMA_PAGAMENTO = 'Cartão de Crédito' AND DATA BETWEEN '2020-01-01' AND '2020-02-13';
	END $
	
DELIMITER ;


SELECT SUM(case when FORMA_PAGAMENTO = 'dinheiro' then 1 else 0 end) as dinheiro, 
 SUM(case when FORMA_PAGAMENTO = 'Cartão de Crédito' then 1 else 0 end) as cartao
from ESTOQUE WHERE DATA BETWEEN '2020-01-01' AND '2020-02-13'














